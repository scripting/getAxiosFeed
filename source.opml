<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Fri, 07 Oct 2022 12:59:06 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: getAxiosFeed</title>
		<dateCreated>Wed, 28 Sep 2022 17:28:57 GMT</dateCreated>
		<dateModified>Fri, 07 Oct 2022 12:59:06 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 12, 25, 26, 29</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>146</windowTop>
		<windowLeft>548</windowLeft>
		<windowBottom>975</windowBottom>
		<windowRight>1685</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/getaxiosfeed/" created="Sun, 24 Jul 2022 20:12:05 GMT">
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;getaxiosfeed&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Get Axios's feed.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;getaxiosfeed.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="getaxiosfeed.js">
				<outline text="var myProductName = &quot;getAxiosFeed&quot;, myVerion = &quot;0.4.0&quot;;"/>
				<outline text="" created="Fri, 07 Oct 2022 12:58:42 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;); "/>
				<outline text="const request = require (&quot;request&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="" created="Wed, 28 Sep 2022 16:58:31 GMT"/>
				<outline text="const config = {" created="Wed, 28 Sep 2022 16:58:31 GMT">
					<outline text="feedUrl: &quot;http://api.axios.com/feed/&quot;," created="Wed, 28 Sep 2022 16:58:39 GMT"/>
					<outline text="localPath: &quot;/Users/davewiner/publicFolder/feedland/feeds/axios.xml&quot;," created="Wed, 28 Sep 2022 17:06:19 GMT"/>
					<outline text="ctMinutesBetwReads: 10," created="Wed, 28 Sep 2022 17:12:27 GMT"/>
					<outline text="productName: &quot;getAxiosFeed&quot;, " created="Wed, 28 Sep 2022 17:16:39 GMT"/>
					<outline text="version: &quot;0.4.0&quot;" created="Wed, 28 Sep 2022 17:16:49 GMT"/>
					<outline text="}" created="Wed, 28 Sep 2022 16:59:08 GMT"/>
					</outline>
				<outline text="function httpReadUrl (url, callback) { //8/21/22 by DW" created="Mon, 20 Jan 2014 17:26:34 GMT" pgfnum="36035">
					<outline text="request (url, function (err, response, data) {">
						<outline text="if (err) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (response.statusCode != 200) {">
								<outline text="const errstruct = {">
									<outline text="message: &quot;Can't read the URL, \&quot;&quot; + url + &quot;\&quot; because we received a status code of &quot; + response.statusCode + &quot;.&quot;,"/>
									<outline text="statusCode: response.statusCode"/>
									<outline text="};"/>
									</outline>
								<outline text="callback (errstruct);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="callback (undefined, data);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 20 Jan 2014 17:26:49 GMT" pgfnum="36038"/>
					</outline>
				<outline text="function updateFeed () {" created="Wed, 28 Sep 2022 17:00:15 GMT">
					<outline text="const whenstart = new Date ();" created="Wed, 28 Sep 2022 17:00:25 GMT"/>
					<outline text="httpReadUrl (config.feedUrl, function (err, xmltext) {" created="Wed, 28 Sep 2022 16:54:31 GMT">
						<outline text="if (err) {" created="Wed, 28 Sep 2022 16:55:39 GMT">
							<outline text="console.log (err.message);" created="Wed, 28 Sep 2022 16:55:42 GMT"/>
							<outline text="}" created="Wed, 28 Sep 2022 16:55:48 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 28 Sep 2022 16:55:49 GMT">
							<outline text="console.log (&quot;httpReadUrl: &quot; + utils.secondsSince (whenstart) + &quot; secs.&quot;);" isComment="true"/>
							<outline text="fs.writeFile (config.localPath, xmltext, function (err) {" created="Wed, 28 Sep 2022 17:08:44 GMT">
								<outline text="if (err) {">
									<outline text="console.log (&quot;fs.writeFile: err.message == &quot; + err.message);"/>
									<outline text="}"/>
									</outline>
								<outline text="else {" created="Wed, 28 Sep 2022 17:09:33 GMT">
									<outline text="console.log (whenstart.toLocaleTimeString () + &quot;: &quot; + config.productName + &quot; v&quot; + config.version + &quot;, &quot; + utils.secondsSince (whenstart) + &quot; secs.\n&quot;);"/>
									<outline text="}" created="Wed, 28 Sep 2022 17:09:36 GMT"/>
									</outline>
								<outline text="});" created="Wed, 28 Sep 2022 17:09:00 GMT"/>
								</outline>
							<outline text="}" created="Wed, 28 Sep 2022 16:56:00 GMT"/>
							</outline>
						<outline text="});" created="Wed, 28 Sep 2022 16:54:49 GMT"/>
						</outline>
					<outline text="}" created="Wed, 28 Sep 2022 17:00:36 GMT"/>
					</outline>
				<outline text="function everyMinute () {" created="Wed, 28 Sep 2022 17:11:33 GMT">
					<outline text="var now = new Date ();" created="Wed, 05 May 2021 19:06:15 GMT"/>
					<outline text="if ((now.getMinutes () % config.ctMinutesBetwReads) == 0) {" created="Wed, 05 May 2021 19:06:21 GMT">
						<outline text="updateFeed ();" created="Wed, 05 May 2021 19:06:56 GMT"/>
						<outline text="}" created="Wed, 05 May 2021 19:06:39 GMT"/>
						</outline>
					<outline text="}" created="Wed, 28 Sep 2022 17:11:41 GMT"/>
					</outline>
				<outline text="updateFeed ();"/>
				<outline text="utils.runEveryMinute (everyMinute);" created="Wed, 28 Sep 2022 17:11:17 GMT"/>
				</outline>
			<outline text="readme.md" created="Fri, 07 Oct 2022 12:57:21 GMT">
				<outline text="# getAxiosFeed">
					<outline text="Some feeds block access from Digital Ocean, so this app downloads the feeds from my LAN and uploads to a place that isn't blocked so we can use the feeds in our RSS reader app."/>
					<outline text="We're using it for more than Axios, but that's where we started, with their main news feed, and added others as they appeared." created="Fri, 07 Oct 2022 12:57:31 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Fri, 07 Oct 2022 12:40:03 GMT">
			<outline text="nodeEditorSuite.utilities.buildGetAxiosFeed ()" created="Fri, 07 Oct 2022 12:40:06 GMT"/>
			</outline>
		</body>
	</opml>
